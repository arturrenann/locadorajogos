{"remainingRequest":"/home/basis/TP1/locadorajogos/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/basis/TP1/locadorajogos/node_modules/ts-loader/index.js??ref--9-3!/home/basis/TP1/locadorajogos/node_modules/angular-router-loader/src/index.js!/home/basis/TP1/locadorajogos/node_modules/tslint-loader/index.js!/home/basis/TP1/locadorajogos/src/main/webapp/app/entities/reservar/reservar.route.ts","dependencies":[{"path":"/home/basis/TP1/locadorajogos/src/main/webapp/app/entities/reservar/reservar.route.ts","mtime":1542969800371},{"path":"/home/basis/TP1/locadorajogos/node_modules/angular2-template-loader/index.js","mtime":1542969796999},{"path":"/home/basis/TP1/locadorajogos/node_modules/cache-loader/dist/cjs.js","mtime":1542969797175},{"path":"/home/basis/TP1/locadorajogos/node_modules/thread-loader/dist/cjs.js","mtime":1542969799699},{"path":"/home/basis/TP1/locadorajogos/node_modules/ts-loader/index.js","mtime":1542969799719},{"path":"/home/basis/TP1/locadorajogos/node_modules/angular-router-loader/src/index.js","mtime":1542969796999},{"path":"/home/basis/TP1/locadorajogos/node_modules/tslint-loader/index.js","mtime":1542969799735}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"app/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar reservar_model_1 = require(\"app/shared/model/reservar.model\");\nvar reservar_service_1 = require(\"./reservar.service\");\nvar reservar_component_1 = require(\"./reservar.component\");\nvar reservar_detail_component_1 = require(\"./reservar-detail.component\");\nvar reservar_update_component_1 = require(\"./reservar-update.component\");\nvar reservar_delete_dialog_component_1 = require(\"./reservar-delete-dialog.component\");\nvar ReservarResolve = /** @class */ (function () {\n    function ReservarResolve(service) {\n        this.service = service;\n    }\n    ReservarResolve.prototype.resolve = function (route, state) {\n        var id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(operators_1.map(function (reservar) { return reservar.body; }));\n        }\n        return rxjs_1.of(new reservar_model_1.Reservar());\n    };\n    ReservarResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof reservar_service_1.ReservarService !== \"undefined\" && reservar_service_1.ReservarService) === \"function\" && _a || Object])\n    ], ReservarResolve);\n    return ReservarResolve;\n    var _a;\n}());\nexports.ReservarResolve = ReservarResolve;\nexports.reservarRoute = [\n    {\n        path: 'reservar',\n        component: reservar_component_1.ReservarComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'reservar/:id/view',\n        component: reservar_detail_component_1.ReservarDetailComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'reservar/new',\n        component: reservar_update_component_1.ReservarUpdateComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'reservar/:id/edit',\n        component: reservar_update_component_1.ReservarUpdateComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    }\n];\nexports.reservarPopupRoute = [\n    {\n        path: 'reservar/:id/delete',\n        component: reservar_delete_dialog_component_1.ReservarDeletePopupComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [core_2.UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n",{"version":3,"file":"/home/basis/TP1/locadorajogos/src/main/webapp/app/entities/reservar/reservar.route.ts","sourceRoot":"","sources":["/home/basis/TP1/locadorajogos/node_modules/angular-router-loader/src/index.js!/home/basis/TP1/locadorajogos/node_modules/tslint-loader/index.js!/home/basis/TP1/locadorajogos/src/main/webapp/app/entities/reservar/reservar.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAA0B;AAC1B,4CAAqC;AACrC,kEAA2D;AAC3D,uDAAqD;AACrD,2DAAyD;AACzD,yEAAsE;AACtE,yEAAsE;AACtE,uFAAkF;AAIlF;IACI,yBAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAG,CAAC;IAEhD,iCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,UAAC,QAAgC,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAb,CAAa,CAAC,CAAC,CAAC;QAChG,CAAC;QACD,MAAM,CAAC,SAAE,CAAC,IAAI,yBAAQ,EAAE,CAAC,CAAC;IAC9B,CAAC;IATQ,eAAe;QAD3B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,kCAAe,oBAAf,kCAAe;OADnC,eAAe,CAU3B;IAAD,sBAAC;;CAAA,AAVD,IAUC;AAVY,0CAAe;AAYf,QAAA,aAAa,GAAW;IACjC;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,sCAAiB;QAC5B,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,WAAW;SACzB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,mDAAuB;QAClC,OAAO,EAAE;YACL,QAAQ,EAAE,eAAe;SAC5B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,WAAW;SACzB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,mDAAuB;QAClC,OAAO,EAAE;YACL,QAAQ,EAAE,eAAe;SAC5B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,WAAW;SACzB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,mDAAuB;QAClC,OAAO,EAAE;YACL,QAAQ,EAAE,eAAe;SAC5B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,WAAW;SACzB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,kBAAkB,GAAW;IACtC;QACI,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,+DAA4B;QACvC,OAAO,EAAE;YACL,QAAQ,EAAE,eAAe;SAC5B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,WAAW;SACzB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Reservar } from 'app/shared/model/reservar.model';\nimport { ReservarService } from './reservar.service';\nimport { ReservarComponent } from './reservar.component';\nimport { ReservarDetailComponent } from './reservar-detail.component';\nimport { ReservarUpdateComponent } from './reservar-update.component';\nimport { ReservarDeletePopupComponent } from './reservar-delete-dialog.component';\nimport { IReservar } from 'app/shared/model/reservar.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ReservarResolve implements Resolve<IReservar> {\n    constructor(private service: ReservarService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(map((reservar: HttpResponse<Reservar>) => reservar.body));\n        }\n        return of(new Reservar());\n    }\n}\n\nexport const reservarRoute: Routes = [\n    {\n        path: 'reservar',\n        component: ReservarComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'reservar/:id/view',\n        component: ReservarDetailComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'reservar/new',\n        component: ReservarUpdateComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'reservar/:id/edit',\n        component: ReservarUpdateComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n\nexport const reservarPopupRoute: Routes = [\n    {\n        path: 'reservar/:id/delete',\n        component: ReservarDeletePopupComponent,\n        resolve: {\n            reservar: ReservarResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Reservars'\n        },\n        canActivate: [UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n"]}]}